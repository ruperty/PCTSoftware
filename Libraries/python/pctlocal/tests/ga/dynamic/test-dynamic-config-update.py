#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Nov 20 19:56:21 2020

@author: ruperty
"""


from epct.configs import DynamicConfiguration
from pct.architectures import LevelKey
from pct.architectures import DynamicArchitecture
from pct.structure  import ArchitectureStructure

import random

from epct.structure  import StructureDefinition

from pct.environments import PendulumV0



random.seed(14)
render=False#True
env = PendulumV0(name='PendulumV0', render=render)
inputs=[2,3]
references=[0,0]
num_actions=1

moves=[
       {'IV':[-0.5,0.5],'IT':[0.65,0.3],'OL0C0ws':[-0.65,0],'OL0C1ws':[0.65,0], 'PendulumV0':[-.5,-0.25], 'Action1ws':[-0.4,0]},
       {}, {},{}, {},{}, {},{}, {},{}, {}]

results = [[[[[2.317571595696437, 5.104105122691694], [0.5422380477715105, -5.061294992101906]], [4.702636637654232, -4.179679940036034], [0, 0], [[-8.547482541434466, -1.005169257076389]]]],
           [[[[5.5503317578022475, -7.632008602691229, -5.5346776737550085, 8.029261725493978, -2.8393464076741353, -4.79195336093454, 6.085625683177771], [2.6332784468335966, -7.005928879819738, 1.0266534485566687, 3.2799810581401, -6.701035050957607, 3.0339658364559376, -7.53947308736675]], [-3.258675481708724, -8.3358399161615, -5.911566040802141, 9.559990671557156, -1.9264840210549075, 9.808652689204493, -1.2270389651639153], [[2.150624259471055, 7.451907640824199, 3.7376700172059074, -7.769370886865195, 1.7816833611454221, 2.674587423243766, -6.376039256923292], [-8.106550015955607, 7.49587841132697, 0.2756291139498046, -6.123225797589007, -0.947981830817886, -5.636241959819371, 5.96483801027019], [0.009602495226319618, -7.951439451994801, 6.362560242299725, -8.209295231307808, -4.386624825257126, -9.440051889163914, 4.806824834923303], [-7.722507612973795, 0.5152911820923727, -8.140326078953047, -0.39125144872459927, 3.707442606743097, 0.6970094720554716, -0.8966619805209923], [-0.30258127155512327, -1.2591483566621484, 1.9089321533869263, -8.102915397826067, -0.5096367904427961, -5.274733387047757, 7.3090625726233185], [8.78040440217513, -8.671023909882908, -7.134060935817033, 4.069417456803459, 1.4289436402030375, -9.6178800127878, 4.097873181952048], [8.878646193033582, -1.5377929775722095, -3.0501896575504084, 1.3880308520721485, 8.782718996859167, -4.729228115737197, -3.954296182084553]], [[-6.225788288891985, 2.568350815755551, -0.6148483160575164, -4.878526911830892, -2.242111251081478, -9.304423601569201, -3.7510228119515237]]], [[[9.658115506226487, 1.7208764712017768, -4.3483214793246265, 8.722602099867803, -2.834485323757754, -4.96930627319262, -9.29720536523369], [-7.0759773589742085, -6.019218116733218, -5.3992935642174755, 7.459619268874388, -4.709072234868755, -5.027987478993527, 2.078530144710067], [8.34278022230017, -4.172503393677727, 5.2317628108783065, -2.6252828491434617, 1.22226758623672, 1.9167615087718772, 8.846226451864428], [5.1451669869192855, 0.16301745840684845, 6.82794424851669, -2.6706015333173365, -2.3177961640253475, 9.199519215233334, 0.9188402524062802], [5.468811528368601, -3.711029069429273, 8.305817388347862, 2.2546783136656057, -5.053805911069674, 8.672744695753984, -0.6215280631850089], [-3.2113326952430583, -4.744947581417788, -7.935077826693697, -5.987142763352327, 3.8448545230170144, -7.1871892792642145, -4.825690167095054], [-1.052426379073017, 0.893807991883449, -2.3898807092320347, 5.701893583888806, -4.864376976506028, -2.6279995528943445, -1.4998772116448968]], [-7.422605835667541, -5.553723858278605, -7.070289580741951, 4.507946695670466, -7.0688053939981454, 3.3614809674348223, -5.559258612781219], [[9.776770026645863, 8.56604030106681], [8.019372539458953, 7.1051196937896], [-2.0449676539714323, -1.0917162458043528], [-3.0850433223665537, 8.719967802384446], [-9.414830170223604, -7.262848275602325], [9.128198559072814, 6.129190887297902], [4.120820509026917, 9.357862951793706]]], [[[0.47253185275344656, 6.705313011834125], [-1.1426992676352494, 8.013914472770285], [-8.60698163522898, -1.23359391988744], [1.5403001583534426, 5.886713206996015], [-1.549874655887164, 3.611898535995387], [9.356002208025775, -1.623099897580314], [-6.009072097823918, -9.394354019074555]], [7.236143606231778, -0.4792964094175751], [0, 0]]],
           [[[[6.553960179654148, -6.097286603584083], [6.997109481631011, -8.500513546672648]], [5.827167047630793, -0.9319816728361516], [[3.238436066844992, -8.995035435557321, -6.206089008572286, 6.241455180382431], [2.0759283974174654, -4.338922683210806, 9.893395963896822, -0.8084141872995616]], [[7.9876790559686555, -8.634039219459073]]], [[[-8.512229814565488, 4.361941990800066, 4.360987450583966, -0.7822065515614831], [-5.949322672997431, -7.854226290812754, -2.7235231588824593, -5.638825929974798]], [3.629561267551484, -3.320398107484868, 0.6840555114291131, 9.602913753780967], [[6.397034715855867, -0.490953340509396], [-3.902115891311208, -9.046642459309737], [-8.887448680248088, -9.390389817577985], [-3.8652751615436713, -2.6997829027258398]]], [[[-4.083364848941493, 3.4162560044516894], [4.785368319519215, -7.372207373718074], [9.980200532635301, -5.812476648813323], [5.3963787952788, 9.941199590526523]], [7.5196475667497396, -5.437732055137705], [0, 0]]]]

inputs_names=['IV', 'IT']
loops=3

debug=False

test=1

structure = StructureDefinition()
#structure.set_config_parameter(LevelKey.ZERO, 'action', 'ones', BinaryOnes.ALL_ONES)
structure.set_structure_parameter('lower_float',-10)
structure.set_structure_parameter('upper_float',10)
structure.set_structure_parameter('levels_limit',5)
structure.set_structure_parameter('columns_limit',8)


structure.set_config_type(LevelKey.ZERO, 'perception', 'Float')
structure.set_config_type(LevelKey.N, 'perception', 'Float')
structure.set_config_type(LevelKey.TOP, 'perception', 'Float')
structure.set_config_type(LevelKey.ZERO, 'action', 'Float')
structure.set_config_parameter(LevelKey.TOP, 'reference', 'value', references )
arch_structure = ArchitectureStructure()



for ctr in range(loops):
    
    env.reset()
    pc = DynamicConfiguration(num_inputs=len(inputs), num_actions=num_actions, references=references, structure=structure)
    config = pc()
    raw  = DynamicConfiguration.dict_to_raw(config)
    print('raw',len(raw),raw)
    assert raw == results[ctr]
    DynamicArchitecture.draw_raw(raw, arch_structure=arch_structure, env=env,
                          inputs_names=inputs_names, move=moves[ctr], figsize=(12,12), summary=False)













